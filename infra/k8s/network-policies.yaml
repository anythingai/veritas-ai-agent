apiVersion: v1
kind: Namespace
metadata:
  name: veritas
  labels:
    name: veritas
---
# Network policy for backend verification service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-backend-network-policy
  namespace: veritas
spec:
  podSelector:
    matchLabels:
      app: veritas-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks from kubelet
  - from: []
    ports:
    - protocol: TCP
      port: 8080
      endPort: 8080
  # Allow metrics scraping from Prometheus
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
      endPort: 9090
  # Allow internal service communication
  - from:
    - podSelector:
        matchLabels:
          app: veritas-data-pipeline
    ports:
    - protocol: TCP
      port: 8080
      endPort: 8080
  egress:
  # Allow database access
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
      endPort: 5432
  # Allow Redis access
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
      endPort: 6379
  # Allow external API calls (OpenAI, IPFS)
  - to: []
    ports:
    - protocol: TCP
      port: 443
      endPort: 443
    - protocol: TCP
      port: 80
      endPort: 80
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Network policy for data pipeline
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-data-pipeline-network-policy
  namespace: veritas
spec:
  podSelector:
    matchLabels:
      app: veritas-data-pipeline
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks from kubelet
  - from: []
    ports:
    - protocol: TCP
      port: 8000
      endPort: 8000
  # Allow metrics scraping from Prometheus
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
      endPort: 8000
  egress:
  # Allow database access
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
      endPort: 5432
  # Allow Redis access
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
      endPort: 6379
  # Allow IPFS API access
  - to: []
    ports:
    - protocol: TCP
      port: 443
      endPort: 443
    - protocol: TCP
      port: 80
      endPort: 80
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Network policy for monitoring components
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-monitoring-network-policy
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow Prometheus web UI access
  - from: []
    ports:
    - protocol: TCP
      port: 9090
      endPort: 9090
  egress:
  # Allow scraping of all services
  - to: []
    ports:
    - protocol: TCP
      port: 8080
      endPort: 8080
    - protocol: TCP
      port: 8000
      endPort: 8000
    - protocol: TCP
      port: 9090
      endPort: 9090
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Network policy for Grafana
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-grafana-network-policy
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: grafana
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow Grafana web UI access
  - from: []
    ports:
    - protocol: TCP
      port: 3000
      endPort: 3000
  egress:
  # Allow Prometheus access
  - to:
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
      endPort: 9090
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Network policy for database
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-database-network-policy
  namespace: database
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow database access from Veritas services
  - from:
    - namespaceSelector:
        matchLabels:
          name: veritas
    ports:
    - protocol: TCP
      port: 5432
      endPort: 5432
  # Allow database exporter access
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 5432
      endPort: 5432
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Network policy for Redis cache
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-redis-network-policy
  namespace: cache
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow Redis access from Veritas services
  - from:
    - namespaceSelector:
        matchLabels:
          name: veritas
    ports:
    - protocol: TCP
      port: 6379
      endPort: 6379
  # Allow Redis exporter access
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 6379
      endPort: 6379
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Network policy for ingress controller
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-ingress-network-policy
  namespace: ingress-nginx
spec:
  podSelector:
    matchLabels:
      app: nginx-ingress
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow HTTP/HTTPS traffic from internet
  - from: []
    ports:
    - protocol: TCP
      port: 80
      endPort: 80
    - protocol: TCP
      port: 443
      endPort: 443
  egress:
  # Allow traffic to Veritas services
  - to:
    - namespaceSelector:
        matchLabels:
          name: veritas
    ports:
    - protocol: TCP
      port: 8080
      endPort: 8080
    - protocol: TCP
      port: 8000
      endPort: 8000
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Default deny all policy for Veritas namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-default-deny
  namespace: veritas
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Default deny all policy for monitoring namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-default-deny
  namespace: monitoring
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Default deny all policy for database namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: database-default-deny
  namespace: database
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Default deny all policy for cache namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cache-default-deny
  namespace: cache
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Network policy for backup jobs
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-backup-network-policy
  namespace: veritas
spec:
  podSelector:
    matchLabels:
      app: backup-job
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks
  - from: []
    ports:
    - protocol: TCP
      port: 8080
      endPort: 8080
  egress:
  # Allow database access for backups
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
      endPort: 5432
  # Allow storage access
  - to: []
    ports:
    - protocol: TCP
      port: 443
      endPort: 443
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53
---
# Network policy for maintenance jobs
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: veritas-maintenance-network-policy
  namespace: veritas
spec:
  podSelector:
    matchLabels:
      app: maintenance-job
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow health checks
  - from: []
    ports:
    - protocol: TCP
      port: 8080
      endPort: 8080
  egress:
  # Allow database access for maintenance
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
      endPort: 5432
  # Allow Redis access for cache maintenance
  - to:
    - namespaceSelector:
        matchLabels:
          name: cache
    ports:
    - protocol: TCP
      port: 6379
      endPort: 6379
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
      endPort: 53 