global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'veritas-prod'
    environment: 'production'
    region: 'us-central1'

rule_files:
  - 'alerts.yaml'
  - 'recording_rules.yaml'

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - 'alertmanager:9093'
      scheme: http
      timeout: 10s
      api_version: v1
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: alertmanager
          action: keep

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 15s

  # Veritas Backend Service
  - job_name: 'veritas-backend'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - veritas
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        regex: veritas-backend
        action: keep
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        regex: "8080"
        action: keep
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_label_app]
        target_label: app
      - source_labels: [__meta_kubernetes_pod_label_version]
        target_label: version
      - source_labels: [__meta_kubernetes_pod_label_environment]
        target_label: environment
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true

  # Veritas Data Pipeline
  - job_name: 'veritas-data-pipeline'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - veritas
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        regex: veritas-data-pipeline
        action: keep
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        regex: "8000"
        action: keep
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_label_app]
        target_label: app
      - source_labels: [__meta_kubernetes_pod_label_environment]
        target_label: environment
    metrics_path: /metrics
    scrape_interval: 15s
    scrape_timeout: 10s

  # Redis
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-prod-veritas-project:6379']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s

  # PostgreSQL (via postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s

  # Node Exporter
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - source_labels: [__meta_kubernetes_node_name]
        target_label: node
      - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
        target_label: hostname
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s

  # Kube State Metrics
  - job_name: 'kube-state-metrics'
    static_configs:
      - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s

  # Blackbox Exporter (for external health checks)
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.veritas.ai/health
        - https://veritas.ai
        - https://docs.veritas.ai
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - action: labelreplace
        regex: (.*)
        target_label: __address__
        replacement: blackbox-exporter:9115

  # Blackbox Exporter (for DNS checks)
  - job_name: 'blackbox-dns'
    metrics_path: /probe
    params:
      module: [dns_udp_consul]
    static_configs:
      - targets:
        - api.veritas.ai
        - veritas.ai
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - action: labelreplace
        regex: (.*)
        target_label: __address__
        replacement: blackbox-exporter:9115

  # Blackbox Exporter (for TCP checks)
  - job_name: 'blackbox-tcp'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - api.veritas.ai:443
        - veritas.ai:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - action: labelreplace
        regex: (.*)
        target_label: __address__
        replacement: blackbox-exporter:9115

  # Cadvisor (container metrics)
  - job_name: 'cadvisor'
    kubernetes_sd_configs:
      - role: node
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__meta_kubernetes_node_name]
        target_label: node

  # Kubelet
  - job_name: 'kubelet'
    kubernetes_sd_configs:
      - role: node
    metrics_path: /metrics
    scrape_interval: 30s
    scrape_timeout: 10s
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__meta_kubernetes_node_name]
        target_label: node

  # API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Service Endpoints
  - job_name: 'kubernetes-service-endpoints'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention: 30d
    out_of_order_time_window: 10m

# Remote write configuration for long-term storage
remote_write:
  - url: "https://prometheus-remote-write.veritas.ai/api/v1/write"
    remote_timeout: 30s
    write_relabel_configs:
      - source_labels: [__name__]
        regex: "veritas_.*"
        action: keep
    queue_config:
      capacity: 2500
      max_shards: 200
      max_samples_per_send: 500
      batch_send_deadline: 5s
      min_backoff: 30ms
      max_backoff: 100ms

# Remote read configuration
remote_read:
  - url: "https://prometheus-remote-read.veritas.ai/api/v1/read"
    remote_timeout: 30s
    read_recent: true
    required_matchers:
      cluster: veritas-prod

# Query logging
query_log_file: /var/log/prometheus/query.log 